syntax = "proto3";

package mnemosynerpc;

option go_package = "github.com/piotrkowalczuk/mnemosyne/mnemosynerpc";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

service SessionManager {
    // Get retrieves session for given access token.
    rpc Get(GetRequest) returns (GetResponse) {};
    // Context works like Get but takes access token from metadata within context.
    // It expects "authorization" key to be present within metadata.
    rpc Context(google.protobuf.Empty) returns (ContextResponse) {};
    rpc List(ListRequest) returns (ListResponse) {};
    rpc Exists(ExistsRequest) returns (google.protobuf.BoolValue) {};
    rpc Start(StartRequest) returns (StartResponse) {};
    rpc Abandon(AbandonRequest) returns (google.protobuf.BoolValue) {};
    rpc SetValue(SetValueRequest) returns (SetValueResponse) {};
    rpc Delete(DeleteRequest) returns (google.protobuf.Int64Value) {};
}

message Session {
    string access_token = 1;
    string subject_id = 2;
    string subject_client = 3;
    map<string, string> bag = 4;
    google.protobuf.Timestamp expire_at = 5;
    string refresh_token = 6;
}

message GetRequest {
    string access_token = 1;
}

message GetResponse {
    Session session = 1;
}

message ContextResponse {
	Session session = 1;
}

message ListRequest {
    // Offset tells how many sessions should be skipped.
    int64 offset = 1;
    // Limit tells how many entries should be returned.
    // By default it's 10.
    int64 limit = 2;
    reserved 3 to 10;
    Query query = 11;
}

message ListResponse {
    repeated Session sessions = 1;
}

message Query {
    google.protobuf.Timestamp expire_at_from = 1;
    google.protobuf.Timestamp expire_at_to = 2;
    string refresh_token = 3;
}

message ExistsRequest {
    string access_token = 1;
}

message StartRequest {
    Session session = 1;
}

message StartResponse {
    Session session = 1;
}

message AbandonRequest {
    string access_token = 1;
}

message SetValueRequest {
    string access_token = 1;
    string key = 2;
    string value = 3;
}

message SetValueResponse {
    map<string, string> bag = 1;
}

message DeleteRequest {
    string access_token = 1;
    google.protobuf.Timestamp expire_at_from = 2;
    google.protobuf.Timestamp expire_at_to = 3;
    string refresh_token = 4;
    string subject_id = 5;
}
